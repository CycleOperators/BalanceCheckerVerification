ARG PLATFORM=linux/amd64
FROM --platform=${PLATFORM} alpine:latest AS build

RUN apk add --no-cache curl ca-certificates tar \
    && update-ca-certificates

RUN mkdir -p /install/bin

# Install ic-wasm
ARG IC_WASM_VERSION
RUN curl -L https://github.com/research-ag/ic-wasm/releases/download/${IC_WASM_VERSION}/ic-wasm-x86_64-unknown-linux-musl.tar.gz -o ic-wasm.tgz \
    && tar xzf ic-wasm.tgz \
    && install ic-wasm /install/bin

# Install mops-cli 
ARG MOPS_CLI_VERSION
RUN curl -L https://github.com/dfinity/mops-cli/releases/download/${MOPS_CLI_VERSION}/mops-cli-linux64 -o mops-cli \
    && install mops-cli /install/bin

# Install moc
ARG MOC_VERSION
RUN if dpkg --compare-versions "${MOC_VERSION}" lt "0.9.5"; then \
      curl -L https://github.com/dfinity/motoko/releases/download/${MOC_VERSION}/motoko-linux64-${MOC_VERSION}.tar.gz -o motoko.tgz; \
    else \
      curl -L https://github.com/dfinity/motoko/releases/download/${MOC_VERSION}/motoko-Linux-x86_64-${MOC_VERSION}.tar.gz -o motoko.tgz; \
    fi \
    && tar xzf motoko.tgz \
    && install moc /install/bin 

# If dpkg is not available then use this line above:
#   RUN if [ "$(printf '%s\n' "${MOC_VERSION}" "0.9.4" | sort -V | head -n 1)" = "${MOC_VERSION}" ]; then \



FROM --platform=${PLATFORM} alpine:latest
RUN apk add bash
COPY --from=build /install/bin/* /usr/local/bin/
